%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clear all, close all, clc
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% NI cDAQ 9178 with
% NI 9402 CounterOutputChannel & NI 9239 AnalogInputChannel

clearvars -global
% trial_num = input('Input the trial number ');
% subject = input('Input the subject code ', 's');
trial_num = 1;
subject = 'null';

% Tic Toc method
frequency = 5;
duration = 10*1;
fs = 10000;
samples = 1:1:duration*fs;
t = (0:length(samples)-1)*1/fs;
signal =sin(2*pi*frequency*t);


daqreset
% To discover a the NI device and save as variable 'devices'
d = daq.getDevices;
vend = daq.getVendors;
% find what slot # to use in the cDAQ chasis
slot = d.SlotNumber;

% Add these global variables for the NI AnalogInput device
global data
global time
global tempData
s = daq.createSession('ni');
% Add Counter output channel
% For NI 9402 port 1 plugged into NI 9239 and for NI 9402 port 2 plugged
% into oscilloscope. It finally works. Trigger plot is the same as the
% oscilloscope.
% in stating the port number in s.addCounterOutputChannel, port 0 can be
% written as 0 or 'ctr0'. However port 1 must be written as channel number
% 2 or 'ctr2' along with port 3 written as 3 or 'ctr3'. Port 4 is
% completely unuseable in Matlab for the NI 9402 card.
% http://zone.ni.com/reference/de-XX/help/370466AF-0113/device_pinoutsdeu/9402cdaqpinout/
% https://imgur.com/a/LFSHRrZ
% https://imgur.com/DHuZr78

ch = s.addCounterOutputChannel('cDAQ2Mod1', [2 3] , 'PulseGeneration')
chAn = s.addAnalogInputChannel('cDAQ2Mod2', 1, 'Voltage');

% Set the Session Sampling Rate - Can't go below 1612 samples/sec
s.Rate = 10000;

s.DurationInSeconds = duration
% For NI 9402, ports 2 & 3 are a 1x2 mtrix of
% CounterOutputPulseGenerationChannel types
ch(1).IdleState='Low';
ch(1).Frequency = frequency;
ch(1).InitialDelay = 0.0008;
% ch(2).IdleState='Low';
% ch(2).Frequency = frequency;
% ch(2).InitialDelay = 0.0008;


% Create checkerboard image
% m - height; n - width. Current display resolution is 1680 width x 1050 height
% 1680/1050 =  8/5. 
% m is multiple of 5, n is 8/5*m
m = 30; n = 48;
% Creates checkerboard matrix and initial figure
[C, K] = checkerb(m, n);
% Increases the size of the figure to fit the screen and the 
h = imshow(C, 'Border', 'tight', 'InitialMagnification', 'fit');
hold on; pause(0.3);
h2 = plot(n/2, m/2, 'r.', 'MarkerSize', 60)
hold off; pause(0.3);

% f - Length of time for image to be displayed before a frame change
% To change the stimulus to 2-frame per trigger period:
% f = 1/(frequency*2);
f = 1/(frequency);
% triggerMat uses the tic toc method to time the changing of the
% checkerboard frame. Start timing at tic -> change frame -> while toc is
% less than f (frequency of frame change), make triggerMat the value the
% frame it is showing. Add index q = q + 1
% when toc = f, end the while loop and change to the next frame with the
% same method.

% Create a large matrix of zeros for Matlab to efficiently put data into.
% Matrix is large enough for 5 min of data using the tic toc function
triggerMat = zeros(800000000, 1);
% k is the number of periods/cycles for fully blinking on then off
k=1;
% n is the index of cycles in the tic toc function
q = 1;

lh = s.addlistener('DataAvailable',@plotData);
pause(0.5);

%Start the trigger signal from NI 9402
s.startBackground(); 



while k < (frequency * duration)
        tic
        h.CData = K; 
        drawnow('expose')
        while(toc < f)
            triggerMat(q) = 1;
            q = q+1;
        end
        
        tic
        h.CData = C; 
        drawnow('expose')
        while(toc < f)
            triggerMat(q) = 2;
            q = q+1;
        end
        k = k+1;
end

 s.IsDone % will report 0
 s.wait(duration) % rather than while
 s.IsDone % will report 1
 
  stop(s);
  release(s);
 
 close(gcf);
 % Global data is the triggerMat pulse signal generated by the NI Card which is
 % running in parallel with the Checkerboard Stimulus through MATLAB.
 % Data is plotted to verify the NI Trigger signal was running at the same
 % time as the Checkerboard Stimulus. 
 % Number of Scans / s.Rate ~= duration (sec)
 plot(data); %  plot global data
 xlabel('Number of Scans');
 % Time Amplitude should be a rectangular signal from 0V to ~3.3V
 ylabel('Amplitude (V)');

 stop(s);
 release(s);

    
% ANALYZING THE QUALITY OF THE CHECKERBOARD STIMULUS IN MATLAB
% tictoc function assumed to be constant

% Delete any extra triggerMat 0s at the end of the vector
% triggerMat is ~70mil+ vector of 1 & 2 when running for 5 min
del_trig = find(triggerMat == 0);
triggerMat(del_trig(1:end)) = [];

% z is the tic toc trigger signal
z = triggerMat;
% Downsample the triggerMat signals to match the NI sampling rate (10000).
% Skips values in between sampling rate
triggerMat_down = z(1:(length(z)/(s.Rate*duration)):length(z));

% Find triggerMat sample changes from high to low
tictoc_change = zeros(length(triggerMat_down),1);
 for c = 1:length(triggerMat_down)
     if c==1
         % Initial trigger sample won't change, make it value 0
        tictoc_change(c) = 0;
        continue;
        % If trigger sample is the same as previous sample, NO CHANGE
        % occurred, make value 0 in vector tictoc_change
     elseif triggerMat_down(c-1) == triggerMat_down(c)
        tictoc_change(c-1) = 0;
        % If trigger sample isn't the same as previous sample, FRAME CHANGE
        % occurred, make value 1 in vector tictoc_change
     elseif triggerMat_down(c-1) ~= triggerMat_down(c)
        tictoc_change(c-1) = 1;
        % Last trigger sample doesn't change, make it value 0 in
        % tictoc_change vector
     elseif c == length(triggerMat_down)
        tictoc_change(c) = 0;
     end
 end

% 1st Column tictoc_times  - Find indexed times when triggerMat is changes
% 2nd Column - Find length of triggerMat points until a change is made
tictoc_times = find(tictoc_change == 1);
for y = 2:length(tictoc_times)
    % 1st frame starts at 0
    if y == 1
        tictoc_times(y,2) = 0;
    else
        % sample length till frame change is made:
        % (sample time current frame change) - (sample time previous frame change)
        tictoc_times(y,2) = tictoc_times(y,1) - tictoc_times(y-1,1);
    end
end

% 1st few seconds, the checkerboard stimulus will be far off, it is best to
% delete samples from initial 2-3 sec or wait to begin averaging epochs.
% Quality of frequency stimulus from tictoc can be measured in tictoc_times



filename = ['C:\Users\Ryan\Desktop\CheckerBoardSSVEP_trial_' num2str(trial_num) '_subject_' subject '.mat'];
save(filename, 'frequency', 'duration', 'sampFreq', 'triggerMat', 'thresh', ...
    'triggerMat_down', 'tictoc_change', 'tictoc_times', 'data');
clearvars z signal samples
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
















